# This is a basic workflow to help you get started with Actions

name: Run Python and Upload Results

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 0 * * *"  # 每天 UTC 00:00 执行（北京时间 08:00）
  workflow_dispatch:  # 允许手动触发（在Actions界面点击"Run workflow"）


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  run-script:
    runs-on: ubuntu-latest  # 使用Ubuntu环境运行
    steps:
      # 步骤1：拉取仓库代码到运行环境
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # 禁用默认凭据，后续使用自定义Token

      # 步骤2：设置Python环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"  # 指定Python版本（与你的脚本兼容）

      # 步骤3：安装Python依赖（如果有requirements.txt）
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

      # 步骤4：运行Python脚本（替换为你的脚本路径）
      - name: Run Python script
        run: |
          python remote_work.py  # 执行脚本，生成输出内容（如output/result.csv）
        #env:
          # 可选：传递环境变量给脚本（如API密钥等）
          # API_KEY: ${{ secrets.YOUR_API_KEY }}

      # 步骤5：提交并推送生成的内容回仓库
      - name: Commit and push changes
        run: |
          # 配置Git用户信息（使用GitHub Actions机器人身份）
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 检查是否有新内容需要提交
          git add .  # 添加所有变更（可指定具体路径，如output/）
          git diff --quiet --exit-code --cached || (
            git commit -m "Auto-update: Results from $(date +'%Y-%m-%d')" &&
            # 使用Personal Access Token推送（避免权限问题）
            git push "https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git" HEAD:main
          )
        env:
          # 需在仓库Secrets中配置PAT（见下方说明）
          PAT: ${{ secrets.PAT }}
